#水平分库  垂直分库

spring:
  main:
    allow-bean-definition-overriding: true
  shardingsphere:
    # 数据源配置
    datasource:
      # 数据源名称，多数据源以逗号分隔
      names: m0,m1,m2
      # 主库的datasource配置
      m1:
        # 指定使用druid连接池
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/order_1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
        username: root
        password: root
      m2:
        # 指定使用druid连接池
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/order_2?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
        username: root
        password: root
      m0:
        # 指定使用druid连接池
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/user?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
        username: root
        password: root
    # 其他属性
    props:
      # 是否开启SQL显示，默认值: false
      sql:
        show: true
    sharding:
      tables:
        user:
          actual-data-nodes: m0.user
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: user

        #逻辑表名
        order:
          actual-data-nodes: m$->{1..2}.order_$->{1..2}
          #分库策略 以user_id为分片键，分片策略为user_id % 2 + 1，user_id为偶数操作m1数据源，否则操作m2
          database-strategy:
            inline:
              #user_id为分片键
              sharding-column: user_id
              #分片策略为user_id % 2 + 1
              algorithm-expression: m$->{user_id % 2 + 1}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: order_$->{order_id % 2 + 1}
          key-generator:
            column: order_id
            type: SNOWFLAKE
      #指定公共表
#      broadcast-tables:


logging:
  level:
    com:
      xdw:
        springbootshardingjdbc: debug
    druid:
      sql: debug
    org:
      springframework:
        web: info
    root: info
